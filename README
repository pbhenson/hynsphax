Introduction
------------

hynsphax is intended to provide integration between the HylaFAX fax services
platform (https://www.hylafax.org/) and the netsapiens SNAPsolution Unified
Communications Platform PBX product (https://netsapiens.com/snapsolution/) by
emulating the Phaxio API (https://www.phaxio.com/docs/api/). It can also
integrate with the ATA Connector software from FaxBack
(http://www.faxback.com/) to allow use of HylaFAX as a backend fax service for
fax over HTTPS supporting ATA devices.

It was developed using the HylaFAX Enterprise product (https://www.ifax.com/)
but would probably work with the open source edition with potentially some
changes. It could possibly also provide access to other fax supporting software
that implements the Phaxio client API, again potentially with some changes as
only the minimal API functionality necessary for netsapiens has been
implemented at this time.


Installation/Configuration
--------------------------

hynsphax consists of several components, some of which are installed on the
HylaFAX servers and others which are installed on the netsapiens servers.
Please see the file INSTALL for installation prerequisites and details of the
necessary installation steps.

In addition, hynsphax requires a central shared database (such as mariadb,
although any perl DBI compatible database server can be used) and a local
database on each HylaFAX server (typically sqlite, although again any DBI
compatible database will suffice). Please see the file README-sql for details
of setting up the necessary tables in the databases.

Once the installation process has been completed on all of the HylaFAX and
netsapiens servers and the databases have been created, there are configuration
steps to be taken on each server as well as configuration data to be added to
the central configuration database.


* Hylafax servers

Update the file “/var/spool/hylafax/etc/config” and add the entry

	JobControlCmd: bin/hynsphax-jobcontrol


Update the file “/var/spool/hylafax/etc/CONFIG/site” and add the two entries:

	DynamicConfig:	bin/hynsphax-dynamicconfig
	UseJobTSI:	true


By default PDF files for received and sent faxes are saved on the server for 30
days. If you wish to change this interval, edit the file “/etc/cron.d/hynsphax”
and change the “+30” to whatever number of days you wish. If you would like the
HylaFAX original TIFF files saved for the same interval, whether it is the
default 30 or a different number, edit the file “/etc/cron.daily/hylafax” and
add the option “-rcv <days>” to the faxcron invocation therein.

Finally, edit the file “/etc/hylafax/hynsphax.conf” to meet your requirements.
The file contains documentation for the configuration options available within
it. This file is in Perl syntax, you should run “perl -c
/etc/hylafax/hynsphax.conf” after updating it to validate there are no errors.


* netsapiens servers

Update the file “/etc/netsapiens/api_config.php” and add or edit the following
entries:

	Configure::write('NsPhaxioURL' , 'http://localhost:8081');
	Configure::write('Phaxio.key' , '<phaxio_key>');
	Configure::write('Phaxio.secret' , '<phaxio_secret>');


The key and the secret should be random strings of reasonable length and
complexity, and will need to match the values configured in hynsphax.conf.

Next, edit the file “/etc/netsapiens/hynsphax.conf” to meet your requirements.
The file contains documentation for the configuration options available within
it. This file is in Perl syntax, you should run “perl -c
/etc/hylafax/hynsphax.conf” after updating it to validate there are no errors.


* FaxBack ATA connector

The faxback ATA connector requires a URL to the endpoint for its API. This
value will be "http(s)://your.hylafax.server/cgi-bin/fb". If you have
more than one hylafax server, you will need a load balancer of some type to
direct a single URL to the backend servers as appropriate.


* Database

The configuration database contains a table named “hy_servers” which provides a
mapping between HylaFAX server host names and two digit node identifiers. For
each HylaFAX server you have provisioned, assign it a node id and create an
entry in this table; for example:

	insert into hy_servers (hostname, node_id)
			values (‘hyfax1.my.domain’, ‘01’);
	insert into hy_servers (hostname, node_id)
			values (‘hyfax2.my.domain’, ‘02’);

The hy_servers table also allows you to group hosts into groups to use when
specifying destinations, this is configured by the hgroup column. If the two
above servers were both members of the 'testbed' host group, the insert might
be:

	insert into hy_servers (hostname, hgroup, node_id)
			values (‘hyfax1.my.domain’, 'testbed', ‘01’);
	insert into hy_servers (hostname, hgroup, node_id)
			values (‘hyfax2.my.domain’, 'testbed', ‘02’);


Another table named ns_servers contains a mapping from netsapiens server host
names to the order they should use when attempting to contact the HylaFAX
servers. The order is a comma separated list of node IDs.  The netsapiens
server will attempt to contact each one in turn, stopping once a transaction is
successful, or failing if it is unable to successfully process the transaction
on any of the nodes. For example, if there are two netsapiens servers, each of
which should access the above example HylaFAX servers with reversed priority,
you might create the entries:

	insert into ns_servers (hostname, hy_node_order)
			values (‘ns1.my.domain’, ’01,02’);
	insert into ns_servers (hostname, hy_node_order)
			values (‘ns2.my.domain’, ’02,01’);

The ns_servers table also allows you to group hosts into groups to use when
specifying destinations, this is configured by the hgroup column. If the two
above servers were both members of the 'prod' host group, the insert might be:

	insert into ns_servers (hostname, hgroup, hy_node_order)
			values (‘ns1.my.domain’, 'prod', ’01,02’);
	insert into ns_servers (hostname, hgroup, hy_node_order)
			values (‘ns2.my.domain’, 'prod', ’02,01’);

A third table defines the faxback ATA connector servers available and is
currently only needed if hostgroups will be used for the faxback destination.
If two servers existed as members of the 'eastfax' hostgroup, an example
insert would be:

	insert into fb_servers (hostname, hgroup)
			values (‘fb1.my.domain’, 'eastfax');
	insert into fb_servers (hostname, hgroup)
			values (‘fb2.my.domain’, 'eastfax');


A table named fb_atas contains configuration details for any FaxBack ATAs
integrated into the hynsphax system. It includes the columns:

- mac (required): The mac address of the ATA.

- active (required): Whether or not the ATA is currently active. If an ATA is
                     not active, inbound faxes will still be delivered to it,
		     but outbound faxes will be refused.

- provisioned (required): Whether or not the ATA has been provisioned. This is
                          updated to true once the AccountProvisioningDetail
			  API call has been made for the its mac address.

- username (required): The username to assign to the ATA.

- password (required): The password to assign to the ATA.

- hyns_options: Per device hynsphax options to apply to the ATA as detailed
                below.

- ata_options: Per device faxback ATA options as detailed below.

- line_options: Per line faxback ATA options as detailed below.


All of the options in the database columns are supplied as "option=value" pairs
separated by commas; in the case of the line_options column, there can be
multiple sets of options separated by the '|' character for ATAs that have more
than one line. If an entry with the mac "default" exists, the options set in
this entry are applied to all ATAs as defaults, and can be overridden on a per
ATA basis. (Note that a username/password is required for all entries, but the
username/password for the default entry is not used and can be any value. You
should assign it a username that will not conflict with your ATA username
layout and a random password).

The hyns_options column has the following parameters:

allow_reprovision: By system default a faxback ATA is only allowed to be
                   provisioned once, as this operation takes place with no
                   authentication. If an ATA needs to be reprovisioned, its
                   record in the database must be updated to mark it as
		   unprovisioned. If you want to allow reprovisioning at any
		   time with no manual intervention, you can set this option
		   to 1. If you set it to 1 on the default ATA entry, you can
		   override it back to 0 on an individual ATA entry.

provision_password: There are two options to initialize an ATA's password;
                    either the user can enter it locally on the ATA after an
		    initial provisioning, or the provisioning process can
		    include it. By system default the password is not included
		    as provisioning in this manner does not provide a valid
		    chain of trust. To enable provisioning of the password,
		    you can set this option to 1. If you set it to 1 on the
		    default ATA entry, you can override it back to 0 on an
		    individual ATA entry.

poll_outbound_status: When an outbound fax is received from an ATA to be
                      delivered, the ATA can optionally poll the API to
		      determine the success or failure of the job. Depending
		      on the value of the ATA line option Notifications for
		      the source phone number, once the status of the
		      submitted job has been received, the ATA can print a
		      message on the originating fax machine. The system
		      default for this option is enabled, you can set it to
		      0 to disable the status check. If you set it to 0 on the
		      default ATA entry, you can override it back to 1 on an
		      individual ATA entry. For ATAs which have multiple
		      lines, you can set it on a per-line basis using the
		      syntax "(1,0,1,1)" (which would disable it on line 2 and
		      enable it on all others).


The ata_options column has the following parameters:

CallAhead: Specifies the ATA behavior for placing an initial VoIP call prior
           to sending the fax via HTTPS. Valid values are:

                Always - Place a VoIP call and wait for a T.38 reinvite from
		         the VoIP service. If that reinvite is received, then
			 the VoIP leg is hung up, and the ATA's call is routed
			 to the fax service via HTTPS.

                Never - All faxes will be immediately routed to the fax server
		        via HTTPS (default).

                Lookup - If the number dialed by the ATA does not have a
		         history of reliable fax transmission, then an initial
			 VoIP call will be placed by the ATA to check for a
			 T.38 reinvite before delivering fax over HTTPS.
			 Otherwise the fax will be immediately routed via
			 HTTPS.

ClientLog: Determines if the ATA should upload its logs to the server. Valid
           values are:

	        Never - Never send logs to the server.

		OnErrors - Only send logs to the server for failed faxes (default).

		Always - Always send logs to the server.

TimeZoneId: Configures a time zone to apply to dates and times contained in
            delivery and non delivery notifications to be used rather than the
	    server's time zone. The value must be a Microsoft .NET
	    TimeZoneInfo.Name or the string "*" for "Standard Time".


The line_options column has the following parameters:

Notifications: Indicates the type of confirmations which should be printed on
               the fax machine. Valid values are:

	            None - No notifications will be printed (default).

		    NonDelivery - Only print notifications if there was a
		                  problem sending the fax.

		    Delivery - Only print notifications if the fax was sent
		               successfully.

                    DeliveryAndNonDelivery - Print a notification after each
		                             fax is finished.

PhoneNumber: The phone number associated with this line on the ATA. Note that
             this must match the phone number configured in the fax table as
	     described later in this document. The PhoneNumber option can be
	     used in the default entry, but it would not make much sense to do
	     so.

StripRowsFromImage: Remove this many rows of pixels from the fax image before
                    sending to avoid double headers on outbound faxes (default
		    0).


The last table in the configuration database is the linchpin of the system;
named “fax” it contains data defining all of the fax numbers known to the
system, how to handle received faxes to them, HylaFAX job options for both
received and sent faxes, along with assorted metadata about the number. The
specific column definitions are:

- number (required): The fax number, generally in E.123 notation. The special
                     entry "default" defines what to do with incoming faxes
		     to numbers that don't exist, as well as the default
		     HylaFAX options applied to all fax processing.

- name (optional): A name to associate with the fax number, available as
                   a macro variable in the fax options.

- city (optional): The city the fax number is located in.

- state (optional): The state the fax number is located in.

- cost (optional): A cost factor associated with the fax number.

- destinations (required): How to handle an incoming fax to the number,
                           further detailed below.

- source_route (optional): If a fax is received from the number to a number
                           that is not known to the system, the destinations
			   for that fax can be defined based on the sending
			   number; the format for this column is the same as
			   the destinations column

- provision_date (optional): The date the number was created.

- hy_job_opts (optional): The HylaFAX options applied to both incoming and
                          outgoing faxes associated with the number, in a
			  format as detailed below.

- hy_job_opts_in (optional): The HylaFAX options applied to incoming faxes to
                             the number.

- hy_job_opts_out (optional): The HylaFAX options applied to outgoing faxes
                              from the number.


The destination column lists one or more groups of destinations, separated by
semicolons ';', where each group consists of one or more destinations,
separated by the vertical bar/pipe symbol '|'. Each destination group is
optionally preceded by a required role or excluded role in parenthesis. A role
for a given hynsphax server can be defined in hynsphax.conf; currently a
server can have no or exactly one role. If there is role specified for a
destination group, it is processed on all servers. If a role requirement is
specified, for example '(thisrole)', that group is only processed on servers
defined to have that role. If a role exclusion is specified, for example
'(!thatrole)', only servers with no role defined or a role other than
'thatrole' defined will process the group.

There are currently four supported destinations. First is the "null"
destination, which simply discards any incoming faxes.

Second is the "netsapiens" destination, which routes a fax to a netsapiens
server. The format for a netsapiens destination is:

	netsapiens:host=<hostname|@hostgroup>,[port=<port>,]=domain=<domain>,user=<user>[,ssl=<0|1>]

where host is either the netsapiens server name or an @ followed by the name of
a hostgroup, port is an optional port number if not the standard 80/443, domain
is a valid domain on that server, user is a valid user in that domain, and ssl
optionally overrides the system default configuration for whether or not to use
ssl when processing phaxio API calls to netsapiens. If a hostgroup is supplied
rather than a single host, the entry will be expanded to try all hosts in the
hostgroup and considered successful if any host in the group succeeds.

For example:

	netsapiens:host=ns01.mydomain.com,domain=test.service,user=101

or:

	netsapiens:host=@testbed,domain=test.service,user=101,ssl=0


Third is the "faxback" destination, which routes a fax to a faxback ATA
through the FaxBack ATA Connector software. The format for a faxback is:

	faxback:host=<hostname>,ata=<ataspec>,number=<number>[,guid=<guid>][,ssl=<0|1>],[port=<port>]

where host is either the name of a system running the ATA Connector software or
an @ followed by the name of a hostgroup, number is a phone number defined in
the fax table to deliver to, ssl optionally overrides the system default
configuration for whether or not to use ssl when processing API calls to the
facback ATA Connector, and the optional port defines which port to connect to
if not the standard 80/443. If a hostgroup is supplied rather than a single
host, the entry will be expanded  try all hosts in the hostgroup and considered
successful if any host in the group succeeds. The optional guid parameter is
only required if using a hosted version of the ATA Connector software, and the
ATA specification is:

	[<ata_number>@][<searchkey>:]<id>

where ata_number is an optional phone number to use for for the API call to
the ATA rather than the incoming fax number, searchkey is what field to use to
find the ata rather than the default username address, and id is the
identifier of the ATA to deliver to.

For example:

	faxback:host=myfb.mydomain.com,ata=ata-501,number=+19095551212
	faxback:host=myfb.mydomain.com,ata=ata-501,number=+19095551212,ssl=0
	faxback:host=myfb.mydomain.com,ata=ata-501,number=+19095551212
	faxback:host=myfb.mydomain.com,ata=mac:ABCD12340044,number=+19095551212
	faxback:host=@prod,ata=6265551212@ata-501,number=+19095551212


Last is the "proxy" destination, which routes a fax through a different
hynsphax server for delivery. The format for a proxy destination is:

	proxy:host=<hostname|@hostgroup>[,port=<port>][,from=<number>][,to=<number>][,ssl=<0|1>]

where host is either a hynsphax server name or an @ followed by the name of a
hostgroup, port is an optional port number if not the standard 80/443, from
optionally overrides the from number for the fax, to optionally overrides the
to number for the fax, and ssl optionally overrides the system default
configuration for whether or not to use ssl when processing proxy calls
to hynsphax servers. If a hostgroup is supplied rather than a single host, the
entry will be expanded to try all hosts in the hostgroup and considered
successful if any host in the group succeeds.

For example:

	proxy:host=hyns1.mydomain.com

or:

	proxy:host=@testbed,to=+16265551212,ssl=0


Destination groups are processed in order, as is each option in a destination
group. If any destination group option succeeds, that group is considered
complete. Otherwise, the group is stored in the outbound queue to get retried
per the retry interval configuration in hynsphax.conf. An entry that tries to
deliver a fax to one of two netsapiens servers might be:

	netsapiens:host=ns01.mydomain.com,domain=test.service,user=101|netsapiens:host=ns02.mydomain.com,domain=test.service,user=101

or, assuming that both servers are part of the hostgroup mygroup:

	netsapiens:host=@mygroup,domain=test.service,user=101


An entry which delivers a fax to netsapiens if processed on a server with role
'ns' or to faxback if processed on a server with role 'fb' might be:

	(ns)netsapiens:host=ns01.mydomain.com,user=101;(fb)faxback:host=myfb.mydomain.com,ata=ata-501,number=+19095551212

Note that if a given server does not meet any of the role requirements, it
will not process the fax, effectively the same as specifying the null handler.


The format for hy_job_opts (as well as the in/out variants) is:

	<option>=<value>[^<option>=<value>]...


Basically, option/value pairs separated by the carat (^) character, for
example:

	Class1ECMSupport=Yes^Class1PersistentECM=Yes^Class1ECMFrameSize=256


The values support macro expansion for a limited set of variables, currently
only NAME (the name associated with the fax number), FAX_NUM (the fax number
being processed), and IP_ADDR (the IP address of the HylaFAX server. An example
using macro expansion:

	BTCallSetupNumber=${FAX_NUM}@${IP_ADDR}

or
	TagLineFormat=%F %I:%M%p %Z|${FAX_NUM}     ${NAME}|Page %%P/%%T


Parameters in hy_job_opts are applied to both HylaFAX DynamicConfig (inbound)
jobs and JobControl (outbound) jobs, whereas hy_job_opts_in and hy_job_opts_out
apply to only inbound or outbound jobs respectively.


Feedback/Availability
---------------------

hynsphax is currently available at github:

	https://github.com/pbhenson/hynsphax


Issues and/or pull requests may be opened via github, or the author can be
contacted directly at the email address <henson@acm.org>. Installation or
customization assistance beyond basic questions or problems is available at an
hourly rate.


License/Copyright
-----------------

Copyright 2019-2020 Paul B. Henson <henson@acm.org>

hynsphax is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Please see the LICENSE file for further details, or visit the URL

	https://www.gnu.org/licenses/
