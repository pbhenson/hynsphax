# Copyright 2019 Paul B. Henson <henson@acm.org>
# 
# hynsphax is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Please see the LICENSE file for further details, or visit the URL
# 
#         https://www.gnu.org/licenses/

use strict;
use warnings;

use Unix::Syslog ();

my $config_data = {

	# Debug level, 0 for no debug logs, 1 or higher for increasingly
	# detailed debug logs
	#
	debug => 1,

	# List of database sources for config db in DBI format
	#   [ dbi_spec, username, password, option hash ]
	#
	#   Connections will be attempted to each source in order, stopping
	#   at the first successful connection and failing if none of the
	#   sources listed are available
	#
	db_config_list => [
		 [ 'dbi:mysql:database=hynsphax;host=my1.mydomain.com;mysql_connect_timeout=10',
		    'username', 'password', { AutoCommit => 1, PrintError => 0 } ],
		 [ 'dbi:mysql:database=hynsphax;host=my2.mydomain.com;mysql_connect_timeout=10',
		    'username', 'password', { AutoCommit => 1, PrintError => 0 } ]
	],

	# List of database sources for queue db in DBI format
	#   [ dbi_spec, username, password, option hash ]
	#
	#   Connections will be attempted to each source in order, stopping
	#   at the first successful connection and failing if none of the
	#   sources listed are available
	#
	db_queue_list => [
		 [ 'dbi:SQLite:/var/spool/hylafax/config/hynsphax/queue.db',
	   	    '', '', { AutoCommit => 1, PrintError => 0 } ]
	],

	# Retry timeouts for inbound fax notification callback
	#  [ retry_count, retry_delay_in_seconds ]
	#
	# If the retry count is less than the first value, the second value
	# defines how long to wait for that retry attempt. Once retries exceed
	# the maximum list value, processing is aborted and considered failed
	#
	inbound_retry_backoff => [
		[ 1, 300 ],
		[ 2, 600 ],
		[ 3, 1200 ],
		[ 4, 1800 ],
		[ 16, 21600 ],
	],

	# retry timeouts for outbound fax status callback
	#  [ retry_count, retry_delay_in_seconds ]
	#
	# If the retry count is less than the first value, the second value
	# defines how long to wait for that retry attempt. Once retries exceed
	# the maximum list value, processing is aborted and considered failed
	#
	outbound_retry_backoff => [
		[ 1, 300 ],
		[ 2, 600 ],
		[ 3, 1200 ],
		[ 4, 1800 ],
		[ 16, 21600 ],
	],

	# Define how to handle files submitted for faxing
	#
	#  First hash key is mime type, whose value is an array with two elements,
	#  a string indicating the command to use to handle that type, followed by
	#  by a hash of options for the handler.
	#
	#  If the handler string is 'hylafax', the file is passed as-is to be faxed.
	#
	#  Otherwise, the string consists of the command to run to convert the file to PDF,
	#  with ${F} a macro for the source file to be converted, and ${D} for the destination
	#  directory in which to create the converted PDF. It doesn't matter what the destination
	#  file name is as long as there is only one file created in the destination directory
	#  and that file is a PDF.
	#
	# The option hash indicates how the processing command should be executed. Currently the
	# only valid option is 'use_shell => "true"', which will run the provided command string
	# under a shell rather than exec'ing it directly.
	#
	mime_type_config => {
		# types passed directly to hylafax as is
		#
		'application/pdf' => [ 'hylafax', {} ],
		'application/postscript' => [ 'hylafax', {} ],
		'image/tiff' => [ 'hylafax', {} ],
		'text/plain' => [ 'hylafax', {} ],

		# types that use ImageMagick to convert to pdf
		#
		#   uncomment if ImageMagick is installed and handling of these
		#   types is desired
		#
		#'image/gif' =>
		#	[ '/bin/convert ${F} ${D}/fax.pdf', {} ],
		#'image/jpeg' =>
		#	[ '/bin/convert ${F} ${D}/fax.pdf', {} ],
		#'image/png' =>
		#	[ '/bin/convert ${F} ${D}/fax.pdf', {} ],

		# types that use libreoffice to convert to pdf
		#
		#   uncomment if libreoffice is installed and handling of these
		#   types is desired
		#
		#'application/msword' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'application/vnd.ms-excel' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'application/vnd.ms-powerpoint' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'application/vnd.openxmlformats-officedocument.presentationml.presentation' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'application/vnd.openxmlformats-officedocument.wordprocessingml.document' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'text/html' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
		#'text/rtf' =>
		#	[ '/usr/bin/libreoffice --headless --convert-to pdf --outdir ${D} ${F}', {} ],
	},

	# Whether or not to remove a leading plus from fax numbers in NANP format
	# (+1dddddddddd) when returning them to netsapiens via the numberList API
	#
	number_strip_plus => 0,

	# phaxio API key - must match configuration on netsapiens server
	#
	phaxio_api_key => 'YouShouldChangeThisPlease',

	# phaxio API secret - must match configuration on netsapiens server
	#
	phaxio_api_secret => 'ChangeThisTooForSecurity',

	# what syslog facility logging should use
	#
	syslog_facility => Unix::Syslog::LOG_DAEMON,
};


# Do not edit below this line

sub hynsphax_config {
	my ($item) = @_;

	if (exists($config_data->{$item})) {
		return $config_data->{$item};
	}

	return;
}

1;
